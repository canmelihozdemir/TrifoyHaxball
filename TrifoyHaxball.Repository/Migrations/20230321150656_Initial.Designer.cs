// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrifoyHaxball.Repository;

#nullable disable

namespace TrifoyHaxball.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230321150656_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrifoyHaxball.Entity.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Coin")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HighScore")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Password")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PlayedGameCount")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Players", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Coin = 0,
                            CreatedDate = new DateTime(2023, 3, 21, 18, 6, 56, 173, DateTimeKind.Local).AddTicks(4467),
                            HighScore = 0,
                            Name = "Trifoy",
                            Password = "testTr12123",
                            PlayedGameCount = 0,
                            Role = "player"
                        },
                        new
                        {
                            Id = 2,
                            Coin = 3,
                            CreatedDate = new DateTime(2023, 3, 21, 18, 6, 56, 173, DateTimeKind.Local).AddTicks(4486),
                            HighScore = 2,
                            Name = "Admin",
                            Password = "testTr12123",
                            PlayedGameCount = 1,
                            Role = "player"
                        });
                });

            modelBuilder.Entity("TrifoyHaxball.Entity.PlayerRank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.ToTable("PlayerRanks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Yeni",
                            PlayerId = 1,
                            Point = 0
                        });
                });

            modelBuilder.Entity("TrifoyHaxball.Entity.PlayerRank", b =>
                {
                    b.HasOne("TrifoyHaxball.Entity.Player", "Player")
                        .WithOne("PlayerRank")
                        .HasForeignKey("TrifoyHaxball.Entity.PlayerRank", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("TrifoyHaxball.Entity.Player", b =>
                {
                    b.Navigation("PlayerRank");
                });
#pragma warning restore 612, 618
        }
    }
}
